name: users_inform-checker

on:
  workflow_dispatch: {}        # הרצה ידנית
  schedule:
    - cron: "0/10 * * * *"     # כל 10 דקות בשעה עגולה

permissions:
  contents: read

env:
  CSV_URL: "https://docs.google.com/spreadsheets/d/e/2PACX-1vS62g9OlDEDwyzAxPX6kv7BI5Y8B_U5Y37YgkcyWq2GJTdceBipvGuHJxbVHnZDa2gWZU7nUcH07TK6/pub?gid=0&single=true&output=csv"

jobs:
  check-sheet:
    runs-on: ubuntu-latest
    outputs:
      should_trigger: ${{ steps.scan.outputs.should_trigger }}
    steps:
      - name: Show IL time
        run: TZ="Asia/Jerusalem" date '+%Y-%m-%d %H:%M IL'

      - name: Download & scan CSV (update = V/v)
        id: scan
        shell: bash
        run: |
          set -euo pipefail
          curl -fsSL "$CSV_URL" -o sheet.csv
          node - <<'NODE' > scan.json
          const fs=require('fs');
          const raw=fs.readFileSync('sheet.csv','utf8').replace(/\r/g,'');
          const lines=raw.split('\n').filter(Boolean);
          const parse=(s)=>{const o=[];let c='',q=false;for(let i=0;i<s.length;i++){const ch=s[i],n=s[i+1];if(ch=='"'&&q&&n=='"'){c+='"';i++;continue;}if(ch=='"'){q=!q;continue;}if(ch==','&&!q){o.push(c);c='';continue;}c+=ch;}o.push(c);return o.map(x=>x.trim());};
          if(!lines.length){console.log(JSON.stringify({error:'Empty CSV'}));process.exit(0);}
          const hdr=parse(lines[0]).map(h=>h.toLowerCase());
          const iu=hdr.indexOf('update'), iname=hdr.indexOf('name');
          const res={names:[], total:0};
          if(iu<0){res.error="Column 'update' not found";}
          else{
            for(let i=1;i<lines.length;i++){
              const r=parse(lines[i]); const v=(r[iu]||'').trim().toLowerCase();
              if(v==='v'){res.names.push(iname>=0?(r[iname]||'').trim():'(no-name)');}
            }
            res.total=res.names.length;
          }
          fs.writeFileSync('scan.out.json', JSON.stringify(res,null,2));
          console.log(JSON.stringify(res));
          NODE

          echo "### Users with update = V/v" >> $GITHUB_STEP_SUMMARY
          jq -r '"Total matches: \(.total)\n" + (.names|map("* "+.)|join("\n"))' scan.json >> $GITHUB_STEP_SUMMARY || true
          if jq -e '.total>0' scan.json >/dev/null; then
            echo "should_trigger=1" >> "$GITHUB_OUTPUT"
          else
            echo "should_trigger=0" >> "$GITHUB_OUTPUT"
          fi

  run-bot:
    needs: check-sheet
    if: needs.check-sheet.outputs.should_trigger == '1'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: "20" }
      - run: npm install
      - run: npx playwright install chromium && npx playwright install-deps
      - name: Trigger Landbot (users_inform)
        env:
          LAND_BOT_URL: "https://landbot.pro/v3/H-3211152-NZNA5NPAWJPGHQMV/index.html"
          CLICK_SELECTOR: ${{ vars.CLICK_SELECTOR }}
          CLICK_X: ${{ vars.CLICK_X }}
          CLICK_Y: ${{ vars.CLICK_Y }}
        run: node scripts/users_inform_landbot_trigger.mjs
