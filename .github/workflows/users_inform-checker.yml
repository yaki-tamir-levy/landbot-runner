name: users_inform-checker.yml

on:
  workflow_dispatch: {}
  schedule:
    - cron: "0/10 * * * *"   # כל 10 דקות על הדקות העגולות: 00,10,20,...

jobs:
  check-sheet:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Scan Google Sheet (update == V/v)
        id: scan
        env:
          CSV_URL: ${{ vars.CSV_URL }}
        run: |
          set -e
          echo "Fetching CSV: $CSV_URL"

          python3 - <<'PY'
import csv, io, sys, urllib.request, textwrap, os

csv_url = os.environ["CSV_URL"]
with urllib.request.urlopen(csv_url) as r:
    data = r.read().decode("utf-8", errors="replace")

reader = csv.DictReader(io.StringIO(data))
names = []
for row in reader:
    val = (row.get("update") or "").strip()
    if val.lower() == "v":
        names.append((row.get("name") or "").strip())

# כתיבה ל-SUMMARY
summary = ["## Users with **update = V/v**", f"**Total matches:** {len(names)}"]
for n in names:
    if n:
        summary.append(f"- {n}")
print("\n".join(summary))

# ל-GITHUB_OUTPUT
gh_out = os.environ.get("GITHUB_OUTPUT")
with open(gh_out, "a", encoding="utf-8") as f:
    f.write(f"total_matches={len(names)}\n")
    f.write(f"should_trigger={'1' if len(names)>0 else '0'}\n")

# ול-GITHUB_STEP_SUMMARY
gh_sum = os.environ.get("GITHUB_STEP_SUMMARY")
with open(gh_sum, "a", encoding="utf-8") as f:
    f.write("\n".join(summary) + "\n")
PY

      # אם יש לפחות התאמה אחת → נפעיל את הבוט
      - name: Setup Node.js
        if: steps.scan.outputs.should_trigger == '1'
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        if: steps.scan.outputs.should_trigger == '1'
        run: npm install

      - name: Install Playwright (Chromium) + Linux deps
        if: steps.scan.outputs.should_trigger == '1'
        run: npx playwright install chromium && npx playwright install-deps

      - name: Run users_inform bot script
        if: steps.scan.outputs.should_trigger == '1'
        env:
          LAND_BOT_URL: "https://landbot.pro/v3/H-3211152-NZNA5NPAWJPGHQMV/index.html"
          CLICK_SELECTOR: ${{ vars.CLICK_SELECTOR }}
          CLICK_X: ${{ vars.CLICK_X }}
          CLICK_Y: ${{ vars.CLICK_Y }}
        run: node scripts/users_inform_landbot_trigger.mjs
